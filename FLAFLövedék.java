//
//
//  Generated by StarUML(tm) Java Add-In
//	Modified by Harangozó
//	@Last modification: 2016.04.29.
//
//  @ Project : Grafikus
//  @ File Name : FLAFLövedék.java
//  @ Generation date : 2016.03.28.
//  @ Author : kifli csapat
//
//

public class FLAFLövedék {
    private Szin szín; 	 	// a lövedék színe
    private Irány irány;	// a lövedék mozgási-iránya
    private FLAF flaf;		// a lövedéket kilövő fegyver referenciája
    
    public FLAFLövedék(FLAF f, Irány i, Szin sz){	//konstruktor
    	flaf = f;	//az f FLAF ból lőtték ki
        irány = i;	//az i irányba lőtték ki
        szín = sz;	//az sz színt kapta a lövedék
    }

    public void mozog(DinamikusMező dm) {	//a lövedék tovább mozoghat a következő mezőre 
    	if(dm.getReplikátor()!=null){
    		becsapódik(dm);
    		return;
    	}
        DinamikusMező sz = dm.getSzomszéd(irány); // a lövedék haladási irányába levő következő szomszédos mező
        
        if (sz != null) {		 	// ha van szomszéd oda lép tovább               
            sz.setLövedék(this);    // átkerül a szomszédos mezőre a lövedék             
            dm.setLövedék(null);	//ahol eddig volt, ott már nem lesz
            sz.mezőSzámítás();      //a szomszéd DinamikusMezőre meghívjuk a mező számítást. így INSTANT becsapódik a lövedék
            return; //a mozgás befejeződött
        } else
        	Hanglejátszó.getInstance().playSound(Hanglejátszó.getInstance().nem_talált);
        dm.setLövedék(null);	//ha nem lépett a következő mezőbe, akkor is innen elengedtük, ezért kinullázuk. ez a pálya szélén fut le
    }
    
    public void becsapódik(DinamikusMező becsapódásHelye){	//a paraméterül kapott becsapódás helyére csapódik be a lövedék
        flaf.setLövedék(null);	//A FALF ot értesítjük, hogy kilőhet másik lövedéket
    	becsapódásHelye.setLövedék(null); //a lövedék becsapódik, megszűnik		
    	if(becsapódásHelye.getReplikátor()!=null){	//ha volt replikátor a becsapódás helyén
    		becsapódásHelye.getReplikátor().elpusztul();	//kinyírja a replikátort
    		Hanglejátszó.getInstance().playSound(Hanglejátszó.getInstance().replikátor_lelövése);
    		return;	//a lövedék becsapódott visszatérünk
    	}
    	if(becsapódásHelye.getPár().getPályaelem().lehetRajtaCSKtLetrehozni()){	//ha a becsapódás helyén csillagkaput tud nyitni
    	    if(becsapódásHelye.getCsk()!=null){
    	    	Hanglejátszó.getInstance().playSound(Hanglejátszó.getInstance().nem_talált);
    	    	return;  //ha a helyen már van egy csillagkapu
    	    }
    		Csillagkapu létrejöttCsk = new Csillagkapu(szín,irány.ellentett(),becsapódásHelye.getSzomszéd(irány.ellentett()));	//létrehozzuk a megfelelő csillagkaput
    		becsapódásHelye.setCsk(létrejöttCsk);	//lerakjuk a csillagkaput
    		flaf.setCsK(szín, létrejöttCsk);	//a flafnál beállítjuk az új csillagkaput
    		Hanglejátszó.getInstance().playSound(Hanglejátszó.getInstance().csillagkapu_lekerült);
    		return;	//a lövedék becsapódott, visszatérünk
    	}
    	Hanglejátszó.getInstance().playSound(Hanglejátszó.getInstance().nem_talált);
    }
    
    public Szin getSzín() {	// getter metódus a lövedék színéhez
        return szín;
    }
    
    public Irány getIrány() {	// getter metódus a lövedék irányához
        return irány;
    }
    
    public FLAF getFLAF() {		// getter metódus a flaf attribútumhoz
        return flaf;
    }
}